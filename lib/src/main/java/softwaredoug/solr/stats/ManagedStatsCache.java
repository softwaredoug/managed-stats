/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package softwaredoug.solr.stats;

import org.apache.solr.handler.component.ResponseBuilder;
import org.apache.solr.handler.component.ShardRequest;
import org.apache.solr.handler.component.ShardResponse;
import org.apache.solr.request.SolrQueryRequest;
import org.apache.solr.search.SolrIndexSearcher;
import org.apache.solr.search.stats.LocalStatsCache;
import org.apache.solr.search.stats.LocalStatsSource;
import org.apache.solr.search.stats.StatsCache;
import org.apache.solr.search.stats.StatsSource;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.lang.invoke.MethodHandles;
import java.util.List;

public class ManagedStatsCache extends LocalStatsCache {
    private static final Logger log = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());
    private ManagedStats stats;


    public ManagedStatsCache() {
        super();
    }

    @Override
    protected StatsSource doGet(SolrQueryRequest req) {
        log.debug("## GET {}", req);
        StatsSource fallback = new LocalStatsSource(statsCacheMetrics);
        return new ManagedStatsSource(fallback, statsCacheMetrics, req.getSchema());
    }

    // by returning null we don't create additional round-trip request.
    @Override
    protected ShardRequest doRetrieveStatsRequest(ResponseBuilder rb) {
        log.debug("## RSR {}", rb.req);
        // already incremented the stats - decrement it now
        statsCacheMetrics.retrieveStats.decrement();
        return null;
    }

    @Override
    protected void doMergeToGlobalStats(SolrQueryRequest req, List<ShardResponse> responses) {
        if (log.isDebugEnabled()) {
            log.debug("## MTGS {}", req);
            for (ShardResponse r : responses) {
                log.debug(" - {}", r);
            }
        }
    }

    @Override
    protected void doReturnLocalStats(ResponseBuilder rb, SolrIndexSearcher searcher) {
        log.debug("## RLS {}", rb.req);
    }

    @Override
    protected void doReceiveGlobalStats(SolrQueryRequest req) {
        log.debug("## RGS {}", req);
    }

    @Override
    protected void doSendGlobalStats(ResponseBuilder rb, ShardRequest outgoing) {
        log.debug("## SGS {}", outgoing);
    }

}

